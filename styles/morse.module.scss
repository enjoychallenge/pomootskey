@use './common/button' as common_buttons;
@use 'common/layout.module' as common_layout;

.buttons_box {
  display: flex;
  flex-wrap: nowrap;
  margin: 0 auto;
  gap: 2vmin;
  justify-content: space-evenly;
  align-items: center;

  @include common_layout.media('landscape_mode') {
    flex-direction: column;
  }

  & > * {
    @include common_buttons.button;
    height: 25vmin;
    width: 25vmin;
    min-width: 80px;
    min-height: 80px;
    max-width: 120px;
    max-height: 120px;

    & > p {
      font-size: max(65px, 400%);
    }
  }
}

.result_cases {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  position: relative;
  & > p {
    font-size: x-small;
  }

  & > div {
    margin-bottom: 0;
    line-height: 1;
    display: flex;
    flex-wrap: wrap;
    padding-right: var(--morseInputCharWidth);
    padding-left: var(--morseInputCharGap);
    column-gap: var(--morseInputCharGap);
    row-gap: var(--morseLineGap);

    font-family: 'DejaVu Sans Mono', 'ui-monospace', 'monospace', 'monospace';
  }
}

.result_item {
  width: var(--morseInputCharWidth);
}

.result_input_char {
  height: var(--morseInputCharHeight);
  font-size: var(--morseInputCharFontSize);
}

.result_input_char_joiner {
  height: var(--morseInputCharJoinerHeight);
  position: relative;
}

.result_input_char_joiner_start {
  @extend .result_input_char_joiner;
  width: calc(100% + var(--morseInputCharGap));
}

.result_input_char_joiner_end {
  @extend .result_input_char_joiner;
  left: calc(-1 * var(--morseInputCharGap));
  width: calc(100% + var(--morseInputCharGap));
}

.result_input_char_joiner_middle {
  @extend .result_input_char_joiner;
  left: calc(-1 * var(--morseInputCharGap));
  width: calc(100% + 2 * var(--morseInputCharGap));
}

.result_input_char_joiner_hidden {
  @extend .result_input_char_joiner;
  visibility: hidden;
}

.result_output_char {
  height: var(--morseOutputCharHeight);
  font-size: var(--morseOutputCharFontSize);
}
