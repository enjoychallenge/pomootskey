@use './button' as common_buttons;

@function translate-media-condition($c) {
  $condMap: (
    'landscape_mode': '(orientation: landscape) and (max-height: 699px)',
  );
  @return map-get($condMap, $c);
}

// See https://css-tricks.com/approaches-media-queries-sass/
@mixin media($args...) {
  $query: '';
  @each $arg in $args {
    $op: '';
    @if ($query != '') {
      $op: ' and ';
    }
    $query: $query + $op + translate-media-condition($arg);
  }
  @media #{$query} {
    @content;
  }
}

.page {
  height: 100vh;
  display: flex;
  flex-direction: column;
}

.main {
  padding: 2vmin;
  flex-grow: 1;
}

.main_decoder {
  @extend .main;
  display: flex;
  gap: 2vmin;
  flex-direction: column-reverse;

  @include media('landscape_mode') {
    flex-direction: row-reverse;
  }
}

.buttons_box {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  max-width: 800px;
  margin: 0 auto;
  gap: 5vmin;

  & > * {
    @include common_buttons.button;
  }
}

.inputs_box {
  flex-grow: 0;
  display: flex;
  align-items: center;
}

.results_box {
  display: flex;
  flex-grow: 1;
  flex-basis: calc(50vh - 56px); // 56px is min height of header
  justify-content: space-between;
  align-items: stretch;
  flex-direction: column;

  & > * {
    margin-bottom: 0.2em;
    overflow-wrap: anywhere;
    word-break: break-all;

    & > p {
      text-transform: uppercase;
      font-family: 'DejaVu Sans Mono', 'ui-monospace', 'monospace', 'monospace';
    }
  }
}
